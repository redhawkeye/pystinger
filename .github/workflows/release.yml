name: Build Release

on:
  push:
    branches:
      - devel
      - master
    tags:
      - latest

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F --clean -n server server.py
            OUT_FILE_NAME: server
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F --clean -n client client.py
            OUT_FILE_NAME: client
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F --clean -w -n server -i .github/images/icon.ico server.py
            OUT_FILE_NAME: server.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F --clean -w -n client -i .github/images/icon.ico client.py
            OUT_FILE_NAME: client.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - name: Create Release Directory
      run: mkdir release

    - name: Move artifacts to Release Directory
      run: |
        mv ./dist/${{ matrix.OUT_FILE_NAME }} ./release/${{ matrix.OUT_FILE_NAME }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Automatic Release
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME }}
        asset_content_type: ${{ matrix.ASSET_MIME }}
