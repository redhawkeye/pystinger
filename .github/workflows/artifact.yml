name: Build Artifact

on:
  push:
    branches:
      - devel
      - master
    tags:
      - latest

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F --clean -n server server.py
            OUT_FILE_NAME: server
            ASSET_MIME: application/binary

          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F --clean -n client client.py
            OUT_FILE_NAME: client
            ASSET_MIME: application/binary

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F --clean -w -n server -i .github/images/icon.ico server.py
            OUT_FILE_NAME: server.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F --clean -w -n client -i .github/images/icon.ico client.py
            OUT_FILE_NAME: client.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.OUT_FILE_NAME }}
        path: ./dist/${{ matrix.OUT_FILE_NAME }}
