name: Build Release

on:
  push:
    branches:
      - devel
      - master
    tags:
      - latest

jobs:
  deleterelease:
    name: Delete Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Delete Release
      run: |
        release_id=$(curl -s -H "Authorization: token ${{ secrets.PAT }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/latest" \
          | jq '.id')
        curl -X DELETE -s -H "Authorization: token ${{ secrets.PAT }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/${release_id}"

  createrelease:
    name: Create Release
    needs: deleterelease
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: latest
        release_name: Latest version
        draft: false
        prerelease: false

    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F --clean -n server server.py
            OUT_FILE_NAME: server
            ASSET_MIME: application/binary

          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F --clean -n client client.py
            OUT_FILE_NAME: client
            ASSET_MIME: application/binary

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F --clean -w -n server -i .github/images/icon.ico server.py
            OUT_FILE_NAME: server.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F --clean -w -n client -i .github/images/icon.ico client.py
            OUT_FILE_NAME: client.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}